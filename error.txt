Name:           quorum-node2-deployment-7cbf49cdcb-bmdfq
Namespace:      quorum-efs-namespace
Priority:       0
Node:           ip-10-42-2-8.cn-northwest-1.compute.internal/10.42.2.8
Start Time:     Sun, 09 Aug 2020 09:59:43 +0800
Labels:         app=qubernetes
                name=quorum-node2-deployment
                pod-template-hash=7cbf49cdcb
                tier=backend
Annotations:    kubernetes.io/psp: eks.privileged
Status:         Pending
IP:             
IPs:            <none>
Controlled By:  ReplicaSet/quorum-node2-deployment-7cbf49cdcb
Init Containers:
  quorum-genesis-init-container:
    Container ID:  
    Image:         quorumengineering/quorum:2.5.0
    Image ID:      
    Port:          <none>
    Host Port:     <none>
    Command:
      sh
    Args:
      -cx
      if [ ! -f $QUORUM_DATA_DIR/genesis_created ]; then /usr/local/bin/geth --datadir $QUORUM_DATA_DIR init /etc/quorum/genesis/genesis-geth.json; date > $QUORUM_DATA_DIR/genesis_created; fi; cp -r /etc/quorum/qdata/contracts-tmp /etc/quorum/qdata/contracts; chmod 755  /etc/quorum/qdata/contracts/runscript.sh; chmod 755  /etc/quorum/qdata/contracts/raft_add_all_permissioned.sh; chmod 755  /etc/quorum/qdata/contracts/raft_add_node.sh; 
    State:          Waiting
      Reason:       PodInitializing
    Ready:          False
    Restart Count:  0
    Environment:
      QUORUM_DATA_DIR:  /etc/quorum/qdata/dd
      QHOME:            /etc/quorum/qdata
    Mounts:
      /etc/quorum/genesis/genesis-geth.json from genesis-config-persistent-storage (rw,path="genesis-geth.json")
      /etc/quorum/qdata from quorum-persistent-storage (rw)
      /etc/quorum/qdata/contracts-tmp from contracts-config (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-7qrhx (ro)
Containers:
  tessera:
    Container ID:  
    Image:         quorumengineering/tessera:0.11
    Image ID:      
    Port:          9001/TCP
    Host Port:     0/TCP
    Command:
      sh
    Args:
      -cx
      chmod 600 $QUORUM_HOME/tm/tm.key; echo DDIR is $DDIR; printenv;
      TESSERA_VERSION=$(unzip -p /tessera/tessera-app.jar META-INF/MANIFEST.MF | grep Tessera-Version | cut -d" " -f2); echo "Tessera version (extracted from manifest file): ${TESSERA_VERSION}";
      TESSERA_VERSION="${TESSERA_VERSION}-suffix"; Tess_Ver_First=$(echo ${TESSERA_VERSION} | awk -F. '{print $1}'); Tess_Ver_Second=$(echo ${TESSERA_VERSION} | awk -F. '{print $2}'); Tess_Ver_Third=$(echo ${TESSERA_VERSION} | awk -F. '{print $3}'); echo "version: first [$Tess_Ver_First], second [$Tess_Ver_Second], third [$Tess_Ver_Third]"; echo "Tessera version - suffix ${TESSERA_VERSION}"; TESSERA_CONFIG_TYPE=;
      if [ "${Tess_Ver_Second}" -ge "8" ]; then TESSERA_CONFIG_TYPE="-enhanced"; fi; if [[ "${Tess_Ver_Second}" -ge "9" ]]; then TESSERA_CONFIG_TYPE="-9.0"; fi;
      echo Config type [${TESSERA_CONFIG_TYPE}];
      CONFIG_TMPL=$(cat ${DDIR}/tessera-config${TESSERA_CONFIG_TYPE}.json.tmpl);
      echo  " sed "s/%QUORUM-NODE1_SERVICE_HOST%/$QUORUM_NODE1_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE2_SERVICE_HOST%/$QUORUM_NODE2_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE3_SERVICE_HOST%/$QUORUM_NODE3_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE4_SERVICE_HOST%/$QUORUM_NODE4_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE5_SERVICE_HOST%/$QUORUM_NODE5_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE6_SERVICE_HOST%/$QUORUM_NODE6_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE7_SERVICE_HOST%/$QUORUM_NODE7_SERVICE_HOST/g" "; CONFIG_WITH_OTHER_HOSTS=$(echo $CONFIG_TMPL |  sed "s/%QUORUM-NODE1_SERVICE_HOST%/$QUORUM_NODE1_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE2_SERVICE_HOST%/$QUORUM_NODE2_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE3_SERVICE_HOST%/$QUORUM_NODE3_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE4_SERVICE_HOST%/$QUORUM_NODE4_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE5_SERVICE_HOST%/$QUORUM_NODE5_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE6_SERVICE_HOST%/$QUORUM_NODE6_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE7_SERVICE_HOST%/$QUORUM_NODE7_SERVICE_HOST/g" ) ; CONFIG_WITH_ALL_HOSTS=$(echo $CONFIG_WITH_OTHER_HOSTS | sed "s/%THIS_SERVICE_HOST%/$QUORUM_NODE2_SERVICE_HOST/g"); PRIV_KEY=$(cat $DDIR/tm.key) PUB_KEY=$(cat $DDIR/tm.pub) CONFIG_FINAL=$(echo $CONFIG_WITH_ALL_HOSTS | sed "s-%THIS_PRIV_KEY%-${PRIV_KEY}-g" |  sed "s-%THIS_PUB_KEY%-${PUB_KEY}-g"); CONFIG_FINAL_9_0=$(echo $CONFIG_WITH_ALL_HOSTS | sed "s-%THIS_PRIV_KEY%-${DDIR}/tm.key-g" |  sed "s-%THIS_PUB_KEY%-${DDIR}/tm.pub-g"); if [[ "${Tess_Ver_Second}" -ge "9" ]]; then CONFIG_FINAL=${CONFIG_FINAL_9_0}; fi; echo $CONFIG_FINAL >  ${DDIR}/tessera-config-with-hosts.json; cat  ${DDIR}/tessera-config-with-hosts.json; java -Xms128M -Xmx128M -jar /tessera/tessera-app.jar -configfile ${DDIR}/tessera-config-with-hosts.json | tee -a ${QHOME}/logs/tessera.log; 
    State:          Waiting
      Reason:       PodInitializing
    Ready:          False
    Restart Count:  0
    Environment:
      QHOME:        /etc/quorum/qdata
      QUORUM_HOME:  /etc/quorum/qdata
      DDIR:         /etc/quorum/qdata/tm
    Mounts:
      /etc/quorum/qdata from quorum-persistent-storage (rw)
      /etc/quorum/qdata/logs from quorum-logs-persistent-storage (rw)
      /etc/quorum/qdata/tm from tm-persistent-storage (rw)
      /etc/quorum/qdata/tm/tessera-config-9.0.json.tmpl from tessera-config (rw,path="tessera-config-9.0.json.tmpl")
      /etc/quorum/qdata/tm/tessera-config-enhanced.json.tmpl from tessera-config (rw,path="tessera-config-enhanced.json.tmpl")
      /etc/quorum/qdata/tm/tessera-config.json.tmpl from tessera-config (rw,path="tessera-config.json.tmpl")
      /etc/quorum/qdata/tm/tm.key from keystore-tm (rw,path="tm.key")
      /etc/quorum/qdata/tm/tm.pub from keystore-tm (rw,path="tm.pub")
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-7qrhx (ro)
  quorum:
    Container ID:  
    Image:         quorumengineering/quorum:2.5.0
    Image ID:      
    Ports:         50401/TCP, 8546/TCP, 21000/TCP
    Host Ports:    0/TCP, 0/TCP, 0/TCP
    Command:
      sh
    Args:
      -cx
       apk add curl; apk add jq;
      sh $QHOME/permission-nodes/permissioned-update.sh; rm -r /etc/quorum/qdata/contracts-tmp; echo what in this dir; ls  $QUORUM_DATA_DIR; cat /etc/quorum/genesis/genesis-geth.json;
      chmod 644 $QUORUM_DATA_DIR/keystore/key;
      echo sleeping for 60 seconds to wait for the transaction manager to startup. sleep 60; echo transaction manager is up;
      
      touch $QUORUM_DATA_DIR/password.txt; NETWORK_ID=10 args=" --gcmode archive --raft  --raftport 50401 --rpcapi admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,raft "; /usr/local/bin/geth --datadir $QUORUM_DATA_DIR $args --permissioned --nodiscover --nat=none --verbosity 9 --networkid $NETWORK_ID --unlock 0 --emitcheckpoints --rpc --rpcaddr 0.0.0.0 --rpcvhosts=* --rpcport 8546 --port 21000 --password $QUORUM_DATA_DIR/password.txt 2>&1 | tee -a /etc/quorum/qdata/logs/quorum.log;
    State:          Waiting
      Reason:       PodInitializing
    Ready:          False
    Restart Count:  0
    Environment:
      PRIVATE_CONFIG:   /etc/quorum/qdata/tm/tm.ipc
      QUORUM_DATA_DIR:  /etc/quorum/qdata/dd
      QUORUM_HOME:      /etc/quorum/qdata
      QHOME:            /etc/quorum/qdata
      TM_HOME:          /etc/quorum/qdata/tm/
      THIS_NODE_ID:     quorum-node2
      THIS_ENODE:       0ba6b9f606a43a95edc6247cdb1c1e105145817be7bcafd6b2c0ba15d58145f0dc1a194f70ba73cd6f4cdd6864edc7687f311254c7555cc32e4d45aeb1b80416
    Mounts:
      /etc/quorum/genesis/genesis-geth.json from genesis-config-persistent-storage (rw,path="genesis-geth.json")
      /etc/quorum/qdata from quorum-persistent-storage (rw)
      /etc/quorum/qdata/dd/geth/enode from quorum-enode (rw,path="enode")
      /etc/quorum/qdata/dd/geth/nodekey from quorum-nodekey (rw,path="nodekey")
      /etc/quorum/qdata/dd/keystore/key from quorum-key-config-persistent-storage (rw,path="key")
      /etc/quorum/qdata/logs from quorum-logs-persistent-storage (rw)
      /etc/quorum/qdata/permission-nodes from quorum-permissioned-config (rw)
      /etc/quorum/qdata/tm from tm-persistent-storage (rw)
      /geth-helpers from geth-helpers (rw)
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-7qrhx (ro)
Conditions:
  Type              Status
  Initialized       False 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  quorum-permissioned-config:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      quorum-permissioned-config
    Optional:  false
  genesis-config-persistent-storage:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      genesis-config
    Optional:  false
  tessera-config:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      tessera-config
    Optional:  false
  contracts-config:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      contracts-config
    Optional:  false
  keystore-tm:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      quorum-node2-tm-key-config
    Optional:  false
  quorum-key-config-persistent-storage:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      quorum-node2-account-key-config
    Optional:  false
  quorum-nodekey:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      quorum-node2-nodekey-config
    Optional:  false
  quorum-enode:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      quorum-node2-enode-config
    Optional:  false
  geth-helpers:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      geth-helpers
    Optional:  false
  quorum-persistent-storage:
    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)
    ClaimName:  quorum-node2-quorum
    ReadOnly:   false
  tm-persistent-storage:
    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)
    ClaimName:  quorum-node2-tm-pvc
    ReadOnly:   false
  quorum-logs-persistent-storage:
    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)
    ClaimName:  quorum-node2-log-pvc
    ReadOnly:   false
  default-token-7qrhx:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-7qrhx
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type     Reason            Age                From                                                   Message
  ----     ------            ----               ----                                                   -------
  Warning  FailedScheduling  13m (x2 over 13m)  default-scheduler                                      pod has unbound immediate PersistentVolumeClaims (repeated 2 times)
  Normal   Scheduled         13m                default-scheduler                                      Successfully assigned quorum-efs-namespace/quorum-node2-deployment-7cbf49cdcb-bmdfq to ip-10-42-2-8.cn-northwest-1.compute.internal
  Warning  FailedMount       11m                kubelet, ip-10-42-2-8.cn-northwest-1.compute.internal  Unable to attach or mount volumes: unmounted volumes=[quorum-persistent-storage tm-persistent-storage], unattached volumes=[quorum-key-config-persistent-storage quorum-persistent-storage genesis-config-persistent-storage tessera-config keystore-tm quorum-enode default-token-7qrhx quorum-logs-persistent-storage tm-persistent-storage quorum-nodekey quorum-permissioned-config geth-helpers contracts-config]: timed out waiting for the condition
  Warning  FailedMount       9m10s              kubelet, ip-10-42-2-8.cn-northwest-1.compute.internal  Unable to attach or mount volumes: unmounted volumes=[tm-persistent-storage quorum-persistent-storage], unattached volumes=[geth-helpers quorum-logs-persistent-storage tm-persistent-storage keystore-tm quorum-key-config-persistent-storage quorum-enode tessera-config quorum-persistent-storage genesis-config-persistent-storage contracts-config default-token-7qrhx quorum-permissioned-config quorum-nodekey]: timed out waiting for the condition
  Warning  FailedMount       6m53s              kubelet, ip-10-42-2-8.cn-northwest-1.compute.internal  Unable to attach or mount volumes: unmounted volumes=[quorum-persistent-storage tm-persistent-storage], unattached volumes=[quorum-logs-persistent-storage tessera-config keystore-tm quorum-nodekey quorum-enode quorum-permissioned-config quorum-persistent-storage default-token-7qrhx genesis-config-persistent-storage quorum-key-config-persistent-storage contracts-config tm-persistent-storage geth-helpers]: timed out waiting for the condition
  Warning  FailedMount       4m35s              kubelet, ip-10-42-2-8.cn-northwest-1.compute.internal  Unable to attach or mount volumes: unmounted volumes=[tm-persistent-storage quorum-persistent-storage], unattached volumes=[keystore-tm tessera-config quorum-permissioned-config quorum-logs-persistent-storage tm-persistent-storage quorum-persistent-storage genesis-config-persistent-storage default-token-7qrhx quorum-key-config-persistent-storage geth-helpers contracts-config quorum-nodekey quorum-enode]: timed out waiting for the condition
  Warning  FailedMount       2m21s              kubelet, ip-10-42-2-8.cn-northwest-1.compute.internal  Unable to attach or mount volumes: unmounted volumes=[quorum-persistent-storage tm-persistent-storage], unattached volumes=[default-token-7qrhx geth-helpers quorum-persistent-storage contracts-config tm-persistent-storage quorum-enode genesis-config-persistent-storage keystore-tm tessera-config quorum-permissioned-config quorum-logs-persistent-storage quorum-key-config-persistent-storage quorum-nodekey]: timed out waiting for the condition
  Warning  FailedMount       5s                 kubelet, ip-10-42-2-8.cn-northwest-1.compute.internal  Unable to attach or mount volumes: unmounted volumes=[tm-persistent-storage quorum-persistent-storage], unattached volumes=[geth-helpers default-token-7qrhx tm-persistent-storage quorum-enode quorum-persistent-storage quorum-key-config-persistent-storage quorum-permissioned-config contracts-config keystore-tm tessera-config quorum-nodekey genesis-config-persistent-storage quorum-logs-persistent-storage]: timed out waiting for the condition
