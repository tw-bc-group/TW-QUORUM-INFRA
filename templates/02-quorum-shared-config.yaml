# kubectl create configmap game-config --from-file=configure-pod-container/dd1/key
apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ include "quorum.name" . }}-quorum-permissioned-config
    labels:
        app: qubernetes
        name: {{ include "quorum.name" . }}-quorum-permissioned-config
data:
    permissioned-nodes.json: |
        [
          "enode://ac6b1096ca56b9f6d004b779ae3728bf83f8e22453404cc3cef16a3d9b96608bc67c4b30db88e0a5a6c6390213f7acbe1153ff6d23ce57380104288ae19373ef@%QUORUM-NODE1_SERVICE_HOST%:21000?discport=0&raftport=50401",
          "enode://0ba6b9f606a43a95edc6247cdb1c1e105145817be7bcafd6b2c0ba15d58145f0dc1a194f70ba73cd6f4cdd6864edc7687f311254c7555cc32e4d45aeb1b80416@%QUORUM-NODE2_SERVICE_HOST%:21000?discport=0&raftport=50401",
          "enode://579f786d4e2830bbcc02815a27e8a9bacccc9605df4dc6f20bcc1a6eb391e7225fff7cb83e5b4ecd1f3a94d8b733803f2f66b7e871961e7b029e22c155c3a778@%QUORUM-NODE3_SERVICE_HOST%:21000?discport=0&raftport=50401",
          "enode://3d9ca5956b38557aba991e31cf510d4df641dce9cc26bfeb7de082f0c07abb6ede3a58410c8f249dabeecee4ad3979929ac4c7c496ad20b8cfdd061b7401b4f5@%QUORUM-NODE4_SERVICE_HOST%:21000?discport=0&raftport=50401",
          "enode://3701f007bfa4cb26512d7df18e6bbd202e8484a6e11d387af6e482b525fa25542d46ff9c99db87bd419b980c24a086117a397f6d8f88e74351b41693880ea0cb@%QUORUM-NODE5_SERVICE_HOST%:21000?discport=0&raftport=50401",
          "enode://eacaa74c4b0e7a9e12d2fe5fee6595eda841d6d992c35dbbcc50fcee4aa86dfbbdeff7dc7e72c2305d5a62257f82737a8cffc80474c15c611c037f52db1a3a7b@%QUORUM-NODE6_SERVICE_HOST%:21000?discport=0&raftport=50401",
          "enode://239c1f044a2b03b6c4713109af036b775c5418fe4ca63b04b1ce00124af00ddab7cc088fc46020cdc783b6207efe624551be4c06a994993d8d70f684688fb7cf@%QUORUM-NODE7_SERVICE_HOST%:21000?discport=0&raftport=50401"
        ]

    permissioned-update.sh: |
        #!/bin/bash
        PERM_NODE_TMPL=$(cat $QHOME/permission-nodes/permissioned-nodes.json.tmpl);
        PERM_NODE_JSON=$(echo $PERM_NODE_TMPL |  sed "s/%QUORUM-NODE1_SERVICE_HOST%/$QUORUM_NODE1_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE2_SERVICE_HOST%/$QUORUM_NODE2_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE3_SERVICE_HOST%/$QUORUM_NODE3_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE4_SERVICE_HOST%/$QUORUM_NODE4_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE5_SERVICE_HOST%/$QUORUM_NODE5_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE6_SERVICE_HOST%/$QUORUM_NODE6_SERVICE_HOST/g" |  sed "s/%QUORUM-NODE7_SERVICE_HOST%/$QUORUM_NODE7_SERVICE_HOST/g" );
        echo $PERM_NODE_JSON >  $QUORUM_DATA_DIR/permissioned-nodes.json;
        cp $QUORUM_DATA_DIR/permissioned-nodes.json $QUORUM_DATA_DIR/static-nodes.json;

---
apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ include "quorum.name" . }}-tessera-config

    labels:
        app: qubernetes
        name: {{ include "quorum.name" . }}-tessera-config
data:
    tessera-config.json.tmpl: |-




        {
            "useWhiteList": false,
            "jdbc": {
                "username": "sa",
                "password": "",
                "url": "jdbc:h2:/etc/quorum/qdata/tm/db;MODE=Oracle;TRACE_LEVEL_SYSTEM_OUT=0",
                "autoCreateTables": true
            },
            "server": {
                "port": 9001,
                "hostName": "http://%THIS_SERVICE_HOST%",
                "bindingAddress": "http://0.0.0.0:9001",
                "sslConfig": {
                    "tls": "OFF",
                    "generateKeyStoreIfNotExisted": true,
                    "serverKeyStore": "/etc/quorum/qdata/tm/server-keystore",
                    "serverKeyStorePassword": "quorum",
                    "serverTrustStore": "/etc/quorum/qdata/tm/server-truststore",
                    "serverTrustStorePassword": "quorum",
                    "serverTrustMode": "TOFU",
                    "knownClientsFile": "/etc/quorum/qdata/tm/knownClients",
                    "clientKeyStore": "/etc/quorum/qdata/tm/client-keystore",
                    "clientKeyStorePassword": "quorum",
                    "clientTrustStore": "/etc/quorum/qdata/tm/client-truststore",
                    "clientTrustStorePassword": "quorum",
                    "clientTrustMode": "TOFU",
                    "knownServersFile": "/etc/quorum/qdata/tm/knownServers"
                }
            },
            "peer": [

                 {
                   "url": "http://%QUORUM-NODE1_SERVICE_HOST%:9001"
                 },


                 {
                   "url": "http://%QUORUM-NODE2_SERVICE_HOST%:9001"
                 },


                 {
                   "url": "http://%QUORUM-NODE3_SERVICE_HOST%:9001"
                 },


                 {
                   "url": "http://%QUORUM-NODE4_SERVICE_HOST%:9001"
                 },


                 {
                   "url": "http://%QUORUM-NODE5_SERVICE_HOST%:9001"
                 },


                 {
                   "url": "http://%QUORUM-NODE6_SERVICE_HOST%:9001"
                 },


                 {
                   "url": "http://%QUORUM-NODE7_SERVICE_HOST%:9001"
                 }

            ],
            "keys": {
                "passwords": [],
                "keyData": [
                    {
                        "privateKeyPath": "/etc/quorum/qdata/tm/tm.key",
                        "publicKeyPath": "/etc/quorum/qdata/tm/tm.pub"
                    }
                ]
            },
            "alwaysSendTo": [],
            "unixSocketFile": "/etc/quorum/qdata/tm/tm.ipc"
        }


    tessera-config-enhanced.json.tmpl: |-



        {
          "useWhiteList": false,
          "jdbc": {
            "username": "sa",
            "password": "",
            "url": "jdbc:h2:/etc/quorum/qdata/tm/db;MODE=Oracle;TRACE_LEVEL_SYSTEM_OUT=0",
            "autoCreateTables": true
          },
          "serverConfigs":[
          {
            "app":"ThirdParty",
            "enabled": true,
            "serverSocket":{
              "type":"INET",
              "port": 9080,
              "hostName": "http://%THIS_SERVICE_HOST%"
            },
            "communicationType" : "REST"
          },
          {
            "app":"Q2T",
            "enabled": true,
            "serverSocket":{
              "type":"UNIX",
              "path":"/etc/quorum/qdata/tm/tm.ipc"
            },
            "communicationType" : "UNIX_SOCKET"
          },
          {
            "app":"P2P",
            "enabled": true,
            "serverSocket":{
              "type":"INET",
              "port": 9001,
              "hostName": "http://%THIS_SERVICE_HOST%",
              "bindingAddress": "http://0.0.0.0:9001"
            },
            "sslConfig": {
              "tls": "OFF",
              "generateKeyStoreIfNotExisted": true,
              "serverKeyStore": "/etc/quorum/qdata/tm/server-keystore",
              "serverKeyStorePassword": "quorum",
              "serverTrustStore": "/etc/quorum/qdata/tm/server-truststore",
              "serverTrustStorePassword": "quorum",
              "serverTrustMode": "TOFU",
              "knownClientsFile": "/etc/quorum/qdata/tm/knownClients",
              "clientKeyStore": "/etc/quorum/qdata/tm/client-keystore",
              "clientKeyStorePassword": "quorum",
              "clientTrustStore": "/etc/quorum/qdata/tm/client-truststore",
              "clientTrustStorePassword": "quorum",
              "clientTrustMode": "TOFU",
              "knownServersFile": "/etc/quorum/qdata/tm/knownServers"
            },
            "communicationType" : "REST"
          }
          ],

            "peer": [

             {
                   "url": "http://%QUORUM-NODE1_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE2_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE3_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE4_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE5_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE6_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE7_SERVICE_HOST%:9001"
                 }

            ],
            "keys": {
                 "passwords": [],
                 "keyData": [
                    {
                        "config": %THIS_PRIV_KEY%,
                        "publicKey": "%THIS_PUB_KEY%"
                    }
                  ]
             },
            "alwaysSendTo": []
        }
    tessera-config-9.0.json.tmpl: |-



        {
          "useWhiteList": false,
          "jdbc": {
            "username": "sa",
            "password": "",
            "url": "jdbc:h2:/etc/quorum/qdata/tm/db;MODE=Oracle;TRACE_LEVEL_SYSTEM_OUT=0",
            "autoCreateTables": true
          },
          "serverConfigs":[
          {
            "app":"ThirdParty",
            "enabled": true,
            "serverAddress": "http://%THIS_SERVICE_HOST%:9080",
            "communicationType" : "REST"
          },
          {
            "app":"Q2T",
            "enabled": true,
            "serverAddress":"unix:/etc/quorum/qdata/tm/tm.ipc",
            "communicationType" : "REST"
          },
          {
            "app":"P2P",
            "enabled": true,
            "serverAddress":"http://%THIS_SERVICE_HOST%:9001",
            "sslConfig": {
              "tls": "OFF",
              "generateKeyStoreIfNotExisted": true,
              "serverKeyStore": "/etc/quorum/qdata/tm/server-keystore",
              "serverKeyStorePassword": "quorum",
              "serverTrustStore": "/etc/quorum/qdata/tm/server-truststore",
              "serverTrustStorePassword": "quorum",
              "serverTrustMode": "TOFU",
              "knownClientsFile": "/etc/quorum/qdata/tm/knownClients",
              "clientKeyStore": "/etc/quorum/qdata/tm/client-keystore",
              "clientKeyStorePassword": "quorum",
              "clientTrustStore": "/etc/quorum/qdata/tm/client-truststore",
              "clientTrustStorePassword": "quorum",
              "clientTrustMode": "TOFU",
              "knownServersFile": "/etc/quorum/qdata/tm/knownServers"
            },
            "communicationType" : "REST"
          }
          ],

            "peer": [

             {
                   "url": "http://%QUORUM-NODE1_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE2_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE3_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE4_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE5_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE6_SERVICE_HOST%:9001"
                 },


             {
                   "url": "http://%QUORUM-NODE7_SERVICE_HOST%:9001"
                 }

            ],
            "keys": {
                 "passwords": [],
                 "keyData": [
                    {
                        "privateKeyPath": "%THIS_PRIV_KEY%",
                        "publicKeyPath": "%THIS_PUB_KEY%"
                    }
                  ]
             },
            "alwaysSendTo": []
        }


---
apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ include "quorum.name" . }}-geth-helpers

    labels:
        app: qubernetes
        name: {{ include "quorum.name" . }}-geth-helpers
data:
    geth-attach.sh: |-
        #!/bin/sh

        # helper for connecting to geth from
        # outside the container
        # kubectl exec -it $POD -c quorum -- /geth-helpers/geth-attach.sh
        echo "connecting to geth $QHOME"
        geth attach --datadir $QUORUM_DATA_DIR $QUORUM_DATA_DIR/geth.ipc
    geth-exec.sh: |-
        #!/bin/sh

        # helper for connecting to geth from
        # outside the container
        # kubectl exec -it $POD -c quorum -- /geth-helpers/geth-exec.sh "admin.peers.length"

        GETH_CMD="eth.blockNumber"
        if [ "$#" -gt 0 ]; then
          GETH_CMD=$1
        fi
        # see: https://github.com/ethereum/go-ethereum/pull/17281
        # https://github.com/ethereum/go-ethereum/issues/16905
        # to avoid warning being returned
        # "WARN [02-20|00:21:04.382] Sanitizing cache to Go's GC limits  provided=1024 updated=663"
        geth --exec $GETH_CMD  --cache=16 attach --datadir $QUORUM_DATA_DIR $QUORUM_DATA_DIR/geth.ipc

---
apiVersion: v1
kind: ConfigMap
metadata:
    name: {{ include "quorum.name" . }}-sh-files

    labels:
        app: qubernetes
        name: {{ include "quorum.name" . }}-sh-files
data:
    tessera-sh: |-
{{ tpl (.Files.Get "files/tessera.sh") . | indent 4 }}